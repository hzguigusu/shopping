<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.guigu.mapper.OrderMapper" >
  <resultMap id="BaseResultMap" type="com.guigu.pojo.Order" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_number" property="orderNumber" jdbcType="VARCHAR" />
    <result column="count_money" property="countMoney" jdbcType="DOUBLE" />
    <result column="pay_type" property="payType" jdbcType="INTEGER" />
    <result column="order-time" property="orderTime" jdbcType="TIMESTAMP" />
    <result column="is_pay" property="isPay" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="address_id" property="addressId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, order_number, count_money, pay_type, order-time, is_pay, user_id, address_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.guigu.pojo.OrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.guigu.pojo.OrderExample" >
    delete from order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.guigu.pojo.Order" >
    insert into order (id, order_number, count_money, 
      pay_type, order-time, is_pay, 
      user_id, address_id)
    values (#{id,jdbcType=INTEGER}, #{orderNumber,jdbcType=VARCHAR}, #{countMoney,jdbcType=DOUBLE}, 
      #{payType,jdbcType=INTEGER}, #{orderTime,jdbcType=TIMESTAMP}, #{isPay,jdbcType=INTEGER}, 
      #{userId,jdbcType=INTEGER}, #{addressId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.guigu.pojo.Order" >
    insert into order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderNumber != null" >
        order_number,
      </if>
      <if test="countMoney != null" >
        count_money,
      </if>
      <if test="payType != null" >
        pay_type,
      </if>
      <if test="orderTime != null" >
        order-time,
      </if>
      <if test="isPay != null" >
        is_pay,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="addressId != null" >
        address_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderNumber != null" >
        #{orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="countMoney != null" >
        #{countMoney,jdbcType=DOUBLE},
      </if>
      <if test="payType != null" >
        #{payType,jdbcType=INTEGER},
      </if>
      <if test="orderTime != null" >
        #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isPay != null" >
        #{isPay,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="addressId != null" >
        #{addressId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.guigu.pojo.OrderExample" resultType="java.lang.Integer" >
    select count(*) from order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update order
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderNumber != null" >
        order_number = #{record.orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.countMoney != null" >
        count_money = #{record.countMoney,jdbcType=DOUBLE},
      </if>
      <if test="record.payType != null" >
        pay_type = #{record.payType,jdbcType=INTEGER},
      </if>
      <if test="record.orderTime != null" >
        order-time = #{record.orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isPay != null" >
        is_pay = #{record.isPay,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.addressId != null" >
        address_id = #{record.addressId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update order
    set id = #{record.id,jdbcType=INTEGER},
      order_number = #{record.orderNumber,jdbcType=VARCHAR},
      count_money = #{record.countMoney,jdbcType=DOUBLE},
      pay_type = #{record.payType,jdbcType=INTEGER},
      order-time = #{record.orderTime,jdbcType=TIMESTAMP},
      is_pay = #{record.isPay,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      address_id = #{record.addressId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.guigu.pojo.Order" >
    update order
    <set >
      <if test="orderNumber != null" >
        order_number = #{orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="countMoney != null" >
        count_money = #{countMoney,jdbcType=DOUBLE},
      </if>
      <if test="payType != null" >
        pay_type = #{payType,jdbcType=INTEGER},
      </if>
      <if test="orderTime != null" >
        order-time = #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isPay != null" >
        is_pay = #{isPay,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="addressId != null" >
        address_id = #{addressId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.guigu.pojo.Order" >
    update order
    set order_number = #{orderNumber,jdbcType=VARCHAR},
      count_money = #{countMoney,jdbcType=DOUBLE},
      pay_type = #{payType,jdbcType=INTEGER},
      order-time = #{orderTime,jdbcType=TIMESTAMP},
      is_pay = #{isPay,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      address_id = #{addressId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>